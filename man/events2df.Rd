% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/events2df.R
\name{events2df}
\alias{events2df}
\title{A funtion that takes a parsed xml doc, find observableDatum nodes according to the xpath, and turn it into a dataframe
It assumes the node is a '//observableData/observableDatum', with extended Info (i.e., "content").}
\usage{
events2df(xmldoc, xpath, filterOutEvents = NULL, dropEvents = NULL)
}
\arguments{
\item{xmldoc}{The parsed xml output, e.g., doc <- xmlParse("SampleLog.xml")}

\item{xpath}{The xpath expression that defines the observableEvents; can be 'xpath1|xpath2'}

\item{filterOutEvents}{The optional filterOutEvents is a list of events (as.character) that should be taken out before calculating the duration of other events. Examples are the system events (e.g., eventType =="api.*")}

\item{dropEvents}{The optional dropEvents is a list of event names that are used in calculating event durations, but are taken out at the output stage because they are not of interest.}
}
\value{
A data frame, with one observableEvent (defined by the xpath) as a row
}
\description{
A funtion that takes a parsed xml doc, find observableDatum nodes according to the xpath, and turn it into a dataframe
It assumes the node is a '//observableData/observableDatum', with extended Info (i.e., "content").
}
\details{
Turning the observableEvents into a dataframe is easy. The function does a number of things that facilitate further analysis.
 -- It adds the test-taker-level info
 -- It turns extendedInfo in the "content" subnode into a named list, and replaces the '$content' var
 -- It corrects the "sceneId" for "nav.scene" events
 -- It converts the timestamp into POSIXct and calculates various duration measures, where "dur" is the time in between each events (i.e., row), "durSinceTestStart" when 0 is the timestamp of the very first event, and "durSinceSceneStart" when 0 is for each "nav.scene".
 -- It filters out unwanted events using the optional 'filterOutEvents' param; it also drops dropEvents at the end.
}

